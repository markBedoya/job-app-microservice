# Application name is being pulled from config-server example
#spring.application.name=job-service
server.port=8082

##### Internal Services URL #####
job-service.url=http://localhost:8082
company-service.url=http://localhost:8081
review-service.url=http://localhost:8083

########## H2 DB Configs ##########
# http://localhost:8080/h2-console/
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console/
#spring.datasource.url=jdbc:h2:mem:test_db
#spring.jpa.generate-ddl=true
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create-drop

########## PostgreSQL DB Configs ##########
# http://localhost:5050/browser/
spring.datasource.url=jdbc:postgresql://localhost:5432/job
spring.datasource.username=sa
spring.datasource.password=sa
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

##### Server Registry Config #####
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

##### Zipkin #####
management.tracing.sampling.probability=1.0
#management.zipkin.tracing.endpoint=http://localhost:9411/zipkin

########## Config Server ##########
spring.config.import=optional:configserver:http://localhost:8085
spring.profiles.active=dev

########## Spring Actuator ##########
# http://localhost:8082/actuator/
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
# This is required to enable circuitbreaker
# http://localhost:8082/actuator/health
management.health.circuitbreakers.enabled=true
########## Spring Actuator Info ##########
# http://localhost:8082/actuator/info
management.info.env.enabled=true
info.app.name=job_service
info.app.description=Job postings from companies.
info.app.version=1.0.0

##### Resilience4j #####
# companyBreaker circuit settings
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.companyBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.companyBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.companyBreaker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.companyBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based
# company retry settings
resilience4j.retry.instances.companyBreaker.max-attempts=1
resilience4j.retry.instances.companyBreaker.wait-duration=3s
# company rate limiter settings
# "Apache JMeter" tool can be used to test rate limits for your API endpoints
resilience4j.ratelimiter.instances.companyBreaker.timeout-duration.seconds=0
resilience4j.ratelimiter.instances.companyBreaker.limit-refresh-period.seconds=10
resilience4j.ratelimiter.instances.companyBreaker.limit-for-period=1



